<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>atmcreaterankvc</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import Foundation
import Cartography
import MeMeKit
import MeMeCustomPods

class ContactVc : MMRankController {
    
    //MARK: &lt;&gt;外部变量

    //MARK: &lt;&gt;外部block
    
    //MARK: &lt;&gt;生命周期开始
    required init() {
        super.init()
        
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.memeNavBar.tilte = NELocalize.localizedString("联系人",comment: "totest")
        self.memeNavBar.backgroundColor = .white
        self.memeNavBar.addLeftBtns(btns: [self.lyNavBackBtn])
        
        segment.buttonTitles = [NELocalize.localizedString("好友",comment: "totest"),
                                NELocalize.localizedString("关注",comment: "totest"),
                                NELocalize.localizedString("粉丝",comment: "totest")]
        self.scrollView.contentInsetAdjustmentBehavior = .never
    }
    
    override func setupViews() {
        self.view.backgroundColor = .white
        self.view.addSubview(self.scrollView)
        self.view.addSubview(self.segment)
        constrain(segment) {
            $0.left == $0.superview!.left
            $0.right == $0.superview!.right
            $0.top == $0.superview!.top + MeMeNavigationBar.fixHeight
            $0.height == 46
        }
        constrain(self.scrollView,self.segment) {
            $0.left == $0.superview!.left
            $0.right == $0.superview!.right
            $0.top == $1.bottom
            $0.bottom == $0.superview!.bottom
        }
    }
    
    //MARK: &lt;&gt;功能性方法
    //MARK: &lt;&gt;内部View
    fileprivate lazy var _segment: RankTabBar = {
        let segment = RankTabBar(frame: CGRect(x: 0, y: 0, width: UIScreen.main.bounds.width, height: 44), style: .customBean)
        segment._btnSelectedColor = UIColor.hexString(toColor: "#222222")
        segment._btnNormalColor = UIColor.hexString(toColor: "#666666")
        segment._btnTitleFont = ThemeLite.Font.pingfang(size: 14)
        segment._btnSelectedTitleFont = ThemeLite.Font.pingfang(size: 14,weight: .medium)
        segment._lineColor = UIColor.hexString(toColor: "#FD4186")
        segment.bottomOffset = 0
        segment.average = true
        segment.backgroundColor = .clear
        segment.itemBetween = 30
        return segment
    }()
    
    override var segment: RankTabBar {
        get {
            return _segment
        }
    }
    
    fileprivate lazy var _controllers: [UIViewController] = [friendVC,followVC,fansVC]
    
    override var controllers: [UIViewController] {
        get {
            return _controllers
        }
    }
    //MARK: &lt;&gt;内部UI变量
    //MARK: &lt;&gt;内部数据变量
    fileprivate lazy var friendVC:ContactContentVC = {
        let vc = ContactContentVC()
        return vc
    }()
    
    fileprivate lazy var followVC:ContactContentVC = {
        let vc = ContactContentVC()
        return vc
    }()
    
    fileprivate lazy var fansVC:ContactContentVC = {
        let vc = ContactContentVC()
        return vc
    }()
    
    //MARK: &lt;&gt;内部block
    
}

</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>747C4467-5F16-42A0-AE25-0D692BA8DE7B</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>atmcreaterankvc</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>

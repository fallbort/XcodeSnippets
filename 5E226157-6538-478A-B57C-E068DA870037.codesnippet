<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>atmaketableviewvc_create2</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import Foundation
import Cartography
import MeMeKit

class PriceManagerVC : UIViewController {
    
    //MARK: &lt;&gt;外部变量
    
    //MARK: &lt;&gt;外部block
    
    //MARK: &lt;&gt;生命周期开始
    required init() {
        super.init(nibName: nil, bundle: nil)
        
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.memeNavBar.tilte = "接单管理"
        self.memeNavBar.backgroundColor = .white
        self.memeNavBar.addLeftBtns(btns: [self.lyNavBackBtn])
        setupViews()
        
        self.loadData()
    }
    
    func setupViews() {
        self.view.backgroundColor = UIColor.hexString(toColor: "f8f8f8")
        self.view.addSubview(self.tableView)
        constrain(self.tableView) {
            $0.left == $0.superview!.left
            $0.right == $0.superview!.right
            $0.top == $0.superview!.top + MeMeNavigationBar.fixHeight
            $0.bottom == $0.superview!.bottom
        }
    }
    
    //MARK: &lt;&gt;功能性方法
    
    func loadData() {
        resetData()
    }
    
    func resetData() {
        var datas:[CommonSettingCellData] = []
        if true {
            let commonData = CommonSettingCellData()
            commonData.isCategory = true
            let size = self.contentView.systemLayoutSizeFitting(CGSize(width: UIScreen.main.bounds.width, height: 0), withHorizontalFittingPriority: UILayoutPriority(999), verticalFittingPriority: UILayoutPriority(50))
            commonData.cellHeight = size.height
            commonData.extraViewAddBlock = { [weak self] (cell,data,posIndex) in
                if posIndex == 0 {
                    cell.addOrUpdateBlockView(reuseKey: "", posX: .center, spacer: [.fixLeft(0),.fixRight(0)],reuseable: false) { [weak self] oldView, posX in
                        return self?.contentView
                    }
                }
            }
            datas.append(commonData)
        }
        self.datas = datas
        resetLayout()
    }
    func resetLayout() {
        self.delegateObject.dataArray = self.datas
        self.tableView.reloadData()
        
    }
    
    //MARK: &lt;&gt;内部View
    fileprivate lazy var tableView: UITableView = {
        let tableView: UITableView = UITableView(frame: CGRect(x: 0, y: 0, width: self.view.width, height: self.view.height))
        tableView.registerClass(UITableViewCell.self)
        tableView.registerClass(FbCommonSettingCell.self)
        tableView.allowsSelection = false
        tableView.separatorStyle = .none
        tableView.scrollsToTop = true
        tableView.dataSource = self.delegateObject
        tableView.delegate = self.delegateObject
        let extraBottom = UIWindow.keyWindowSafeAreaInsets().bottom &gt; 0 ? UIWindow.keyWindowSafeAreaInsets().bottom : 10
        tableView.contentInset = UIEdgeInsets.init(top: 0, left: 0, bottom: extraBottom, right: 0)
        tableView.scrollEnabledWhenEmpty = true
        tableView.backgroundColor = UIColor.clear
        if #available(iOS 15.0, *) {
            tableView.sectionHeaderTopPadding = 0
        }
        return tableView
    }()
    
    var contentView: UIView = {
        let view = UIView()
        constrain(view) {
            $0.height == 0 ~ 99
        }
        return view
    }()
    //MARK: &lt;&gt;内部UI变量
    //MARK: &lt;&gt;内部数据变量
    lazy var delegateObject: CommonTDelegateObject = {
        let object = CommonTDelegateObject()
        object.inView = self.view
        return object
    }()
    
    lazy var datas:[CommonSettingCellData] = []
    //MARK: &lt;&gt;内部block
    
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>5E226157-6538-478A-B57C-E068DA870037</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>atmaketableviewvc_create2</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
